/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SBS;

import java.awt.Color;
import java.awt.Font;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author nicho
 */
public class FolderChooser extends javax.swing.JDialog {

    
    private BackupPath backPath;
    private BackupPath backPathSync;
    private Set<Path> pathSet;
    private DefaultListModel modelList = new DefaultListModel();  //use to put items on jList
    private String backupType;
    private Settings setting= new Settings();
    private String listSelectedPath;  //use to communicate the Path to delete from List event to BtnRemove event. Will set to null every time remove is pressed
    
    
    public FolderChooser(java.awt.Frame parent, boolean modal, String backupType) {
        super(parent, modal);
        if(backupType==null || backupType.equals("")){
            JOptionPane.showMessageDialog(null, "ERROR\nBackup Type variable not set");
            return;
        }
        initComponents();
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        this.backupType= backupType;
        backPath= new BackupPath(backupType);
        this.setTitle("Folder Chooser " + backupType);
        listPath.setModel(modelList);
        RefreshList();
        CheckSyncBackup();
    }
    
    private void RefreshSync(){
        backPathSync.CheckCreateFiles();
        backPathSync.EraseSet();
        Set<Path> backupList= new HashSet<Path>(backPath.GetPathSet());
        Iterator itList= backupList.iterator();
        while(itList.hasNext()){
            backPathSync.AddPath((Path) itList.next());
        }
    }
    
    private void CreateBackPathSync(){
        if(backPathSync==null){
            if(backupType.equals("device")){
                backPathSync= new BackupPath("server");
            }
            else{
                backPathSync= new BackupPath("device");
            }
        }
    }
    
    private boolean CheckSyncBackup(){
        CreateBackPathSync();
        boolean check= setting.getBoolValue("syncDevSrvBackup");
        if(check){
            checkBoxSyncBackup.setSelected(true);
            RefreshSync();
        }
        else checkBoxSyncBackup.setSelected(false);
        return check;
    }
    
    private void RefreshList(){
        modelList.clear();
        pathSet= new HashSet<Path>(backPath.GetPathSet());
        Iterator itPath= pathSet.iterator();
        while(itPath.hasNext()){
            modelList.addElement(itPath.next().toString());
        }
        
        btnRemove.setEnabled(false);
        setNum();
        CheckSyncBackup();
    }
    
    private void setNum(){
        int num= setting.getIntValue(backupType+"FoldNum");
        if(num<=0){
           labelFolderNum.setForeground(Color.red);
           labelFolderNum.setText("0");
        }
        else{
           labelFolderNum.setForeground(Color.blue);
           labelFolderNum.setText(Integer.toString(num));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        listPath = new javax.swing.JList<>();
        labelFolderListTxt = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnErase = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        labelFolderNumTxt = new javax.swing.JLabel();
        labelFolderNum = new javax.swing.JLabel();
        checkBoxSyncBackup = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        listPath.setFont(new java.awt.Font("Microsoft Tai Le", 1, 12)); // NOI18N
        listPath.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SelectedItemEvent(evt);
            }
        });
        jScrollPane1.setViewportView(listPath);

        labelFolderListTxt.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        labelFolderListTxt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SBS/Icons/list-icon-30x30.png"))); // NOI18N
        labelFolderListTxt.setText("Folder List");

        btnAdd.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SBS/Icons/folder-icon-30x30.png"))); // NOI18N
        btnAdd.setText("Add Folder");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        btnRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SBS/Icons/Delete-logo-30x30.png"))); // NOI18N
        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnErase.setFont(new java.awt.Font("Microsoft Tai Le", 1, 12)); // NOI18N
        btnErase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SBS/Icons/clean-erase-logo-30x30.png"))); // NOI18N
        btnErase.setText("Erase List");
        btnErase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEraseActionPerformed(evt);
            }
        });

        btnClose.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SBS/Icons/close-icon-30x30.png"))); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        labelFolderNumTxt.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        labelFolderNumTxt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SBS/Icons/folder-icon-30x30.png"))); // NOI18N
        labelFolderNumTxt.setText("Folder Num");

        labelFolderNum.setFont(new java.awt.Font("Microsoft Tai Le", 1, 18)); // NOI18N
        labelFolderNum.setForeground(new java.awt.Color(0, 0, 255));
        labelFolderNum.setText("0");

        checkBoxSyncBackup.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        checkBoxSyncBackup.setText("Sync Device/Server Backup");
        checkBoxSyncBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxSyncBackupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .addComponent(btnErase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnClose)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(labelFolderListTxt)
                        .addGap(59, 59, 59)
                        .addComponent(labelFolderNumTxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelFolderNum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(checkBoxSyncBackup, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(fileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnErase, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelFolderListTxt)
                            .addComponent(labelFolderNumTxt)
                            .addComponent(labelFolderNum)
                            .addComponent(checkBoxSyncBackup))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        Path newPath=fileChooser.getCurrentDirectory().toPath();
        if(!backPath.IsInSet(newPath)){
            backPath.AddPath(newPath);
        }
        else{
            JLabel msgLabel= new JLabel();
            msgLabel.setFont(new Font ("Microsoft tai le", Font.BOLD, 16));
            msgLabel.setText("Path already on List");
            JOptionPane.showMessageDialog(null, msgLabel, null, HEIGHT, new ImageIcon(getClass().getResource(exclamationIcon)));
        }
        RefreshList();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEraseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEraseActionPerformed
        JLabel msgLabel= new JLabel();
        msgLabel.setFont(new Font ("Microsoft tai le", Font.BOLD, 16));
        msgLabel.setText("Erase Backup Folder list?");
        int ans= JOptionPane.showConfirmDialog(null, msgLabel, null, WIDTH, HEIGHT, new ImageIcon(getClass().getResource(eraseIcon)));
        if(ans==JOptionPane.YES_OPTION){
            backPath.EraseSet();
        }
        RefreshList();
    }//GEN-LAST:event_btnEraseActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void SelectedItemEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SelectedItemEvent
        listSelectedPath= listPath.getSelectedValue();
        if(listSelectedPath!=null){
            btnRemove.setEnabled(true);
        }
    }//GEN-LAST:event_SelectedItemEvent

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        Path delPath=Paths.get(listSelectedPath);
        JLabel msgLabel= new JLabel();
        msgLabel.setFont(new Font ("Microsoft tai le", Font.BOLD, 14));
        msgLabel.setText("Remove selected folder?");
        int ans= JOptionPane.showConfirmDialog(null, msgLabel, null, WIDTH, HEIGHT, new ImageIcon(getClass().getResource(eraseIcon)));
        if(ans==JOptionPane.YES_OPTION){
            backPath.RemovePath(delPath);
        }
        listSelectedPath=null;
        RefreshList();
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void checkBoxSyncBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxSyncBackupActionPerformed
        if(!CheckSyncBackup()){
            setting.SaveSetting("bool", "syncDevSrvBackup", "true");
        }
        else setting.SaveSetting("bool", "syncDevSrvBackup", "false");
        CheckSyncBackup();
    }//GEN-LAST:event_checkBoxSyncBackupActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FolderChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FolderChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FolderChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FolderChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FolderChooser dialog = new FolderChooser(new javax.swing.JFrame(), true, null);  //to debug set null value to "device"
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    //***************ICONS DATABASE START***************
        String eraseIcon= "/SBS/Icons/clean-erase-logo-30x30.png";
        String exclamationIcon= "/SBS/Icons/Exclamation-point-info-icon-50x50.png";
                
        //new ImageIcon(getClass().getResource(ICON))
    //***************ICONS DATABASE END*****************

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnErase;
    private javax.swing.JButton btnRemove;
    private javax.swing.JCheckBox checkBoxSyncBackup;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelFolderListTxt;
    private javax.swing.JLabel labelFolderNum;
    private javax.swing.JLabel labelFolderNumTxt;
    private javax.swing.JList<String> listPath;
    // End of variables declaration//GEN-END:variables
}
