/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SBS;

import java.awt.Font;
import static java.awt.image.ImageObserver.HEIGHT;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author nicho
 */
public class CopyHistoryGUI extends javax.swing.JDialog {

    /**
     * Creates new form CopyHistoryGUI
     */
    
    private Settings setting= new Settings();
    
    public CopyHistoryGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        refresh();
    }
    
    private void refresh(){
        labelPath.setText("");
        String path= setting.getStingValue("copyHistoryPath");
        boolean isOn= setting.getBoolValue("copyHistoryActive");
        if(isOn){
            if(!Files.exists(Paths.get(path))){
                setting.SaveSetting("string", "copyHistoryPath", "");
                setting.SaveSetting("bool", "copyHistoryActive", "false");
                labelPath.setText("");
                labelPassOnOff.setIcon(new ImageIcon(getClass().getResource(labelDeviceOff)));
            }
            else{
                labelPath.setText(path);
                labelPassOnOff.setIcon(new ImageIcon(getClass().getResource(labelDeviceOn)));
            }
        }
        else{
            if(path!=null && path.length()>2) labelPath.setText(path);
            else labelPath.setText("Not set");
            labelPassOnOff.setIcon(new ImageIcon(getClass().getResource(labelDeviceOff)));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelPass = new javax.swing.JLabel();
        labelOnOff = new javax.swing.JLabel();
        labelPassOnOff = new javax.swing.JLabel();
        fileChooser = new javax.swing.JFileChooser();
        jSeparator1 = new javax.swing.JSeparator();
        btnSet = new javax.swing.JButton();
        labelDestTxt = new javax.swing.JLabel();
        labelPath = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        labelPass.setFont(new java.awt.Font("Microsoft Tai Le", 1, 18)); // NOI18N
        labelPass.setForeground(new java.awt.Color(0, 0, 255));
        labelPass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SBS/Icons/history-folder-40x40.png"))); // NOI18N
        labelPass.setText("Copy History");

        labelOnOff.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        labelOnOff.setText("On/Off");

        labelPassOnOff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SBS/Icons/switch-on-icon-70x30.png"))); // NOI18N
        labelPassOnOff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelPassOnOfflabelDeviceOnOffMainEvent(evt);
            }
        });

        fileChooser.setMaximumSize(null);

        btnSet.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        btnSet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SBS/Icons/folder-icon-30x30.png"))); // NOI18N
        btnSet.setText("Set Folder");
        btnSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetActionPerformed(evt);
            }
        });

        labelDestTxt.setFont(new java.awt.Font("Microsoft Tai Le", 1, 16)); // NOI18N
        labelDestTxt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SBS/Icons/folder-icon-30x30.png"))); // NOI18N
        labelDestTxt.setText("Folder:");

        labelPath.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        labelPath.setText("folder path");

        btnClose.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SBS/Icons/close-icon-30x30.png"))); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(fileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelPass)
                        .addGap(18, 18, 18)
                        .addComponent(labelOnOff)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelPassOnOff)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClose)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSet, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelDestTxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelPath)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPass)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSet)
                        .addComponent(btnClose))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(labelPassOnOff)
                        .addComponent(labelOnOff)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDestTxt)
                    .addComponent(labelPath))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void labelPassOnOfflabelDeviceOnOffMainEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelPassOnOfflabelDeviceOnOffMainEvent
        boolean isOn= setting.getBoolValue("copyHistoryActive");
        if(isOn){
            setting.SaveSetting("bool", "copyHistoryActive", "false");
        }
        else{
            String checkPath= setting.getStingValue("copyHistoryPath");
            if(checkPath==null || checkPath.length()<2){
                JLabel msgLabel= new JLabel();
                msgLabel.setFont(new Font ("Microsoft tai le", Font.BOLD, 16));
                msgLabel.setText("Choose Folder before Enable Copy");
                JOptionPane.showMessageDialog(rootPane, msgLabel, null, HEIGHT, new ImageIcon(getClass().getResource(errorIcon)));
            }
            else{
                setting.SaveSetting("bool", "copyHistoryActive", "true");
            }
        }
        refresh();
    }//GEN-LAST:event_labelPassOnOfflabelDeviceOnOffMainEvent

    private void btnSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetActionPerformed
        Path newPath=fileChooser.getCurrentDirectory().toPath();
        setting.SaveSetting("string", "copyHistoryPath", newPath.toString());
        refresh();
    }//GEN-LAST:event_btnSetActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CopyHistoryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CopyHistoryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CopyHistoryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CopyHistoryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CopyHistoryGUI dialog = new CopyHistoryGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    //***************ICONS DATABASE START***************
        String labelDeviceOn= "/SBS/Icons/switch-on-icon-70x30.png";
        String labelDeviceOff= "/SBS/Icons/switch-off-icon-70x30.png";
        String errorIcon= "/SBS/Icons/error-logo-50x50.png";
    //***************ICONS DATABASE END*****************

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSet;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel labelDestTxt;
    private javax.swing.JLabel labelOnOff;
    private javax.swing.JLabel labelPass;
    private javax.swing.JLabel labelPassOnOff;
    private javax.swing.JLabel labelPath;
    // End of variables declaration//GEN-END:variables
}
